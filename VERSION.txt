This files describes the rules of the version number system for spectral-wave-data.
===================================================================================

We follow the common SEMVER convention as defined at https://semver.org/.

The actual version tag for the software and documentation is generated by the script:

  version_definition.py

In general the version tag has the structure:

  major.minor.patch-<pre-release>+<build>

The actual version can be extracted from your software. E.g. in python:

  swd.get('version')


The major-tag:
==============

This integer tag should be incremented if and only if the new version introduce 
some incompatible API or SWD file formats compared to the previous version.

By design the major-tag will hopefully never be incremented!

If x is incremented then y=z=0.


The minor-tag:
==============

This integer tag should be incremented if and only if the new features are 
introduced without breaking any backward compatibility.

Examples are new additional spectral formulations, or additional class methods
in the API.

If y is incremented then z=0.


The patch-tag:
==============

This integer tag should be incremented if and only if the new version
does not introduce changes in the API or file formats. E.g. only improvements
of code or documentation. Bug fix etc.


The <pre-release> tag:
======================

The <pre-release>tag is an alpha-numeric tag indicating the kind of pre release.
E.g. <pre-release>='beta.3', <pre-release>='beta.3.debug.4'

Only official releases should have an empty <pre-release> tag.


The <build>-tag:
================

The <build>-tag is an optional additional tag. Typical a
vendor specific identification tag.

If and only if the source code is different from the official releases
from the master/origin branch, a non-empty <build>-tag should be applied.

